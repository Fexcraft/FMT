import org.gradle.internal.os.OperatingSystem
import java.text.SimpleDateFormat

group 'net.fexcraft.app.fmt'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.9.23"

switch(OperatingSystem.current()){
	case OperatingSystem.LINUX:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
			? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
			: "natives-linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
		break
}
version = "3.0.0";
new File(projectDir, '/src/net/fexcraft/app/fmt/FMT.java').find { line ->
    if(line.contains('String VERSION')){
        version = line.substring(line.indexOf('"') + 1).replace('";', '')
        return true
    }
    return false;
}
sourceCompatibility = 15
targetCompatibility = 15
compileJava.options.encoding = 'UTF-8'

//@formatter:off
def log4j_version = '2.5'
def commons_version = '3.4'
def commons_collections = '4.1'
def guava_version = '19.0'
def gson_version = '2.7'
def legui_version = '3.3.1';

def joml_version = "1.9.25"//"-SNAPSHOT"
def lwjgl_version = "3.2.3"//'3.2.4-SNAPSHOT'
def le_cbchain = '1.0.0'
def le_util = '1.0.0'
//@formatter:on

//Make this project as a Gradle project
eclipse.project {
  	natures 'org.springsource.ide.eclipse.gradle.core.nature'
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/releases" }
}

dependencies {
    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'

    //@formatter:off
    implementation group: "org.joml", name: "joml", version: joml_version, changing: true
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j_version, changing: false
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: commons_version, changing: false
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: commons_collections, changing: false
    implementation group: 'com.google.guava', name: 'guava', version: guava_version, changing: false
    implementation group: 'com.google.code.gson', name: 'gson', version: gson_version, changing: false

    implementation group: 'org.liquidengine', name: 'cbchain', version: le_cbchain, changing: true
    implementation group: 'org.liquidengine', name: 'leutil', version: le_util, changing: true
	implementation group: 'org.liquidengine', name: 'legui', version: legui_version, changing: true;

    implementation group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true, classifier: 'natives-macos'

    implementation group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true, classifier: 'natives-macos'

    implementation group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true, classifier: 'natives-macos'

    implementation group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true
    implementation group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    implementation group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    implementation group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true, classifier: 'natives-macos'

    implementation group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-macos'

    implementation group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true, classifier: 'natives-macos'
    
    implementation group: 'org.lwjgl', name: 'lwjgl-tinyfd', version: lwjgl_version, changing: true
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-tinyfd', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-tinyfd', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtimeOnly group: 'org.lwjgl', name: 'lwjgl-tinyfd', version: lwjgl_version, changing: true, classifier: 'natives-macos'
    
    //implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.7', changing: true
    //runtimeOnly group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.7', changing: true
    
    implementation files('libs/discord-rpc.jar', 'libs/VOXtoFMT-1.jar', 'libs/FCL-1.12.69.jar')
    //@formatter:on
    //testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    main {
        java {
            srcDirs "src"
        }
        resources {
        	srcDirs 'resources'
        	srcDirs 'scripts'
        }
    }
}
 
mainClassName = 'net.fexcraft.app.fmt.FMT'

task mainJar(type: Jar){
	manifest {
		attributes 'Title': "Fex's Modelling Toolbox",  
		'Version': version,
		'Main-Class': mainClassName,
		'Created-By': "Ferdinand Calo' (FEX___96)",
		"Class-Path": ". " + (configurations.runtimeClasspath.collect { "lib/" + it.getName() }.join(' '))
	}
	from(zipTree("${destinationDir}/${archiveName}")){
		exclude 'net/fexcraft/app/fmt/launch/'
		include 'net/fexcraft/app/fmt/'
		include 'net/fexcraft/app/json/'
	}
	from('src/'){
		include 'log4j2.xml'
	}
	baseName = "FMT"
	version = "";
}

task launcherJar(type: Jar){
	manifest {
		attributes 'Title': "Fex's Modelling Toolbox Launcher/Updater",  
		'Version': version,
		'Main-Class': 'net.fexcraft.app.fmt.launch.Launcher',
		'Created-By': "Ferdinand Calo' (FEX___96)"
	}
	from(zipTree("${destinationDir}/${archiveName}")){
		include 'net/fexcraft/app/fmt/launch/'
		include 'net/fexcraft/app/json/'
	}
	baseName = "FMT_Launcher"
	version = "";
}

task copyForUpload(){
	copy {
    	from configurations.runtimeClasspath
    	into "upload/lib"
	}
	copy {
    	from "build/libs/FMT.jar"
    	into "upload/"
	}
	copy {
    	from "build/libs/FMT_Launcher.jar"
    	into "upload/"
	}
	copy {
    	from "resources/"
    	into "upload/resources"
	}
	copy {
    	from "scripts/"
    	into "upload/scripts"
	}
}

def String[] res_types = [ "resources/", "scripts/" ]

task compileCatalog(){
	def String catalog_fmt = '{\n\t"file_root": "http://fexcraft.net/files/app_data/fmt/",\n\t"files": [\n'
	def String path, restype;
	sourceSets.main.resources.each {
		path = it.getPath()
		path = path.replace("\\", "/")
		for(String type : res_types){
			if(path.contains(type)){
				restype = type;
				break;
			}
		}
		path = path.substring(path.indexOf(restype))
		catalog_fmt += '\t\t[ "' + path + '", ' + it.lastModified() + ' ],\n'
	}
	configurations.runtimeClasspath.each {
		path = it.getPath().replace("\\", "/")
		path = "lib" + path.substring(path.lastIndexOf("/"))
		catalog_fmt += '\t\t[ "' + path + '", ' + it.lastModified() + ', true ],\n'
	}
	catalog_fmt += '\t\t[ "FMT.jar", ' + new File(projectDir, "/upload/FMT.jar").lastModified() + ', true, false ]\n';
	catalog_fmt += '\t],\n'
	catalog_fmt += '\t"last_catalog_update": "' + new SimpleDateFormat("HH:mm:ss dd.MMM.yyyy z").format(new Date()) + '"\n';
	catalog_fmt += '}\n'
	new File(projectDir, "upload/catalog.fmt").text = catalog_fmt
	new File(projectDir, "catalog.fmt").text = catalog_fmt
}

build.finalizedBy(mainJar)
build.finalizedBy(launcherJar)
build.finalizedBy(copyForUpload)
build.finalizedBy(compileCatalog)
